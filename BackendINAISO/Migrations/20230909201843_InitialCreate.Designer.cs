// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backendINAISO.Data;

#nullable disable

namespace BackendINAISO.Migrations
{
    [DbContext(typeof(INAISOContextDB))]
    [Migration("20230909201843_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("backendINAISO.Models.Aplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Aplicaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clase = "a"
                        },
                        new
                        {
                            Id = 2,
                            Clase = "b"
                        },
                        new
                        {
                            Id = 3,
                            Clase = "c"
                        });
                });

            modelBuilder.Entity("backendINAISO.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AplicacionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AplicacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AplicacionId = 1,
                            FechaFin = new DateTime(2023, 9, 12, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1176),
                            FechaInicio = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1175),
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            AplicacionId = 1,
                            FechaFin = new DateTime(2023, 9, 13, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1182),
                            FechaInicio = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1180),
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            AplicacionId = 2,
                            FechaFin = new DateTime(2023, 9, 14, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1184),
                            FechaInicio = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1183),
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            AplicacionId = 2,
                            FechaFin = new DateTime(2023, 9, 15, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1187),
                            FechaInicio = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1186),
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            AplicacionId = 3,
                            FechaFin = new DateTime(2023, 9, 16, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1190),
                            FechaInicio = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1189),
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            AplicacionId = 3,
                            FechaFin = new DateTime(2023, 9, 17, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1193),
                            FechaInicio = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1191),
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 7,
                            AplicacionId = 1,
                            FechaFin = new DateTime(2023, 9, 18, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1195),
                            FechaInicio = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1194),
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 8,
                            AplicacionId = 1,
                            FechaFin = new DateTime(2023, 9, 19, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1198),
                            FechaInicio = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1197),
                            UsuarioId = 4
                        });
                });

            modelBuilder.Entity("backendINAISO.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1000),
                            ModifiedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1051),
                            Name = "Usuario1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1053),
                            ModifiedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1054),
                            Name = "Usuario2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1056),
                            ModifiedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1057),
                            Name = "Usuario3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1059),
                            ModifiedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1060),
                            Name = "Usuario4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1061),
                            ModifiedAt = new DateTime(2023, 9, 9, 17, 18, 43, 620, DateTimeKind.Local).AddTicks(1062),
                            Name = "Usuario5"
                        });
                });

            modelBuilder.Entity("backendINAISO.Models.Reserva", b =>
                {
                    b.HasOne("backendINAISO.Models.Aplicacion", "Aplicacion")
                        .WithMany("Reservas")
                        .HasForeignKey("AplicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backendINAISO.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aplicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("backendINAISO.Models.Aplicacion", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("backendINAISO.Models.Usuario", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
